[{"/home/roko/Microverse/Proyects/react-todo-app/src/index.js":"1","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/TodoContainer.js":"2","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/Header.js":"3","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/InputTodo.js":"4","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/Navbar.js":"5","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/TodosList.js":"6","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/pages/NotMatch.js":"7","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/pages/About.js":"8","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/TodoItem.js":"9","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/pages/SinglePage.js":"10"},{"size":440,"mtime":1629217702407,"results":"11","hashOfConfig":"12"},{"size":2183,"mtime":1629214360076,"results":"13","hashOfConfig":"12"},{"size":482,"mtime":1629214105353,"results":"14","hashOfConfig":"12"},{"size":1080,"mtime":1629217815427,"results":"15","hashOfConfig":"12"},{"size":1399,"mtime":1629218146402,"results":"16","hashOfConfig":"12"},{"size":680,"mtime":1629217395005,"results":"17","hashOfConfig":"12"},{"size":146,"mtime":1629214059049,"results":"18","hashOfConfig":"12"},{"size":578,"mtime":1629214059049,"results":"19","hashOfConfig":"12"},{"size":1757,"mtime":1629217651326,"results":"20","hashOfConfig":"12"},{"size":1108,"mtime":1629214059049,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pv3ylo",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/roko/Microverse/Proyects/react-todo-app/src/index.js",[],"/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/TodoContainer.js",[],"/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/Header.js",[],"/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/InputTodo.js",["45"],"import React, { useState } from 'react';\nimport { FaPlusCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nconst InputTodo = (props) => {\n  const [inputText, setInputText] = useState({\n    title: '',\n  });\n\n  const onChange = (e) => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputText.title.trim()) {\n      props.addTodoProps(inputText.title);\n      setInputText({\n        title: '',\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add todo...\"\n        value={inputText.title}\n        name=\"title\"\n        onChange={onChange}\n      />\n      <button type=\"button\" className=\"input-submit\">\n        <FaPlusCircle style={{ color: 'darkcyan', fontSize: '20px', marginTop: '2px' }} />\n      </button>\n    </form>\n  );\n};\n\nInputTodo.propTypes = {\n  addTodoProps: PropTypes.func.isRequired,\n};\n\nexport default InputTodo;\n","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/Navbar.js",[],"/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/TodosList.js",["46"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodosList = (props) => {\n  const { todos } = props;\n\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={props.handleChangeProps}\n          deleteTodoProps={props.deleteTodoProps}\n          setUpdate={props.setUpdate}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodosList.propTypes = {\n  todos: PropTypes.arrayOf.isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  deleteTodoProps: PropTypes.func.isRequired,\n  setUpdate: PropTypes.func.isRequired,\n};\n\nexport default TodosList;\n","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/pages/NotMatch.js",[],"/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/pages/About.js",[],"/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/components/TodoItem.js",["47"],"import React, { useState } from 'react';\nimport { FaTrash } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport styles from './TodoItem.module.css';\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false);\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === 'Enter') {\n      setEditing(false);\n    }\n  };\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#595959',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n\n  const { todo } = props;\n  const { completed, id, title } = todo;\n\n  const viewMode = {};\n  const editMode = {};\n\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox}\n          checked={completed}\n          onChange={() => props.handleChangeProps(id)}\n        />\n        <button type=\"button\" onClick={() => props.deleteTodoProps(id)}>\n          <FaTrash style={{ color: 'orangered', fontSize: '16px' }} />\n        </button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        className={styles.textInput}\n        value={title}\n        onChange={(e) => { props.setUpdate(e.target.value, id); }}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.element.isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  deleteTodoProps: PropTypes.func.isRequired,\n  setUpdate: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","/home/roko/Microverse/Proyects/react-todo-app/src/functionBased/pages/SinglePage.js",[],{"ruleId":"48","severity":2,"message":"49","line":3,"column":1,"nodeType":"50","endLine":3,"endColumn":36},{"ruleId":"48","severity":2,"message":"49","line":2,"column":1,"nodeType":"50","endLine":2,"endColumn":36},{"ruleId":"48","severity":2,"message":"49","line":3,"column":1,"nodeType":"50","endLine":3,"endColumn":36},"import/no-extraneous-dependencies","'prop-types' should be listed in the project's dependencies. Run 'npm i -S prop-types' to add it","ImportDeclaration"]